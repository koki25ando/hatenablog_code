ungroup() %>%
mutate(name_cat = case_when(
name_count == 1 ~ "other_dish",
TRUE ~ as.character(merged_dat$name)
))
library(tictoc)
tic()
test = merged_dat[is.na(merged_dat$y), ] %>%
select(-y)
train = merged_dat[!is.na(merged_dat$y), ]
randomforest_model = randomForest(y ~ ., data = train)
test = merged_dat[is.na(merged_dat$y), ] %>%
select(-y)
train = merged_dat[!is.na(merged_dat$y), ]
rf_model = ranger(data = train, y ~ .,
num.trees = 500, respect.unordered.factors = "order")
train$pred = predict(rf_model, select(train, -y))$predictions
train %>%
mutate(error = pred - y) %>%
summarise(rmse = sqrt(mean(error^2)))
merged_dat$name_cat = NULL
test = merged_dat[is.na(merged_dat$y), ] %>%
select(-y)
train = merged_dat[!is.na(merged_dat$y), ]
rf_model = ranger(data = train, y ~ .,
num.trees = 500, respect.unordered.factors = "order")
train$pred = predict(rf_model, select(train, -y))$predictions
train %>%
mutate(error = pred - y) %>%
summarise(rmse = sqrt(mean(error^2)))
merged_dat %>%
head
time_elapsed = c(53.2, 440)
volume = c(.1, .5)
time_dat = data.frame(time_elapsed, volume)
time_dat %>%
ggplot(aes(volume, time_elapsed)) +
geom_point() +
geom_line() +
theme_minimal() +
labs(x = "Percentage(%)")
time_elapsed_model = lm(data = time_dat, time_elapsed  ~ volume)
predict(time_elapsed_model, newdata = data.frame(volume = 1))
predict(time_elapsed_model, newdata = data.frame(volume = 100))
96656.5/60
96656.5/60/60
predict(time_elapsed_model, newdata = data.frame(volume = 1))
time_elapsed = c(53.2, 440.4, 1654.5)
volume = c(.1, .5, 1)
time_dat = data.frame(time_elapsed, volume)
time_dat %>%
ggplot(aes(volume, time_elapsed)) +
geom_point() +
geom_line() +
theme_minimal() +
labs(x = "Percentage(%)")
time_elapsed_model = lm(data = time_dat, time_elapsed  ~ volume)
predict(time_elapsed_model, newdata = data.frame(volume = 1))
predict(time_elapsed_model, newdata = data.frame(volume = 100))
180334.9/60/60
time_elapsed_submission = c(NA, 600, NA)
time_dat = data.frame(time_elapsed, volume, time_elapsed_submission)
time_dat %>%
ggplot() +
geom_point(aes(volume, time_elapsed)) +
geom_line() +
theme_minimal() +
labs(x = "Percentage(%)")
time_elapsed = c(53.2, 440.4, 1654.5)
time_elapsed_submission = c(NA, 600, NA)
volume = c(.1, .5, 1)
time_dat = data.frame(time_elapsed, volume, time_elapsed_submission)
time_dat %>%
ggplot() +
geom_point(aes(volume, time_elapsed)) +
geom_line() +
theme_minimal() +
labs(x = "Percentage(%)")
time_dat
time_dat %>%
ggplot() +
geom_point(aes(volume, time_elapsed)) +
geom_line(aes(volume, time_elapsed)) +
theme_minimal() +
labs(x = "Percentage(%)")
time_elapsed = c(53.2, 440.4, 1654.5)
time_elapsed_submission = c(NA, 600, NA)
volume = c(.1, .5, 1)
time_dat = data.frame(time_elapsed, volume, time_elapsed_submission)
time_dat %>%
ggplot() +
geom_point(aes(volume, time_elapsed)) +
geom_line(aes(volume, time_elapsed)) +
geom_point(aes(volume, time_elapsed_submission)) +
geom_line(aes(volume, time_elapsed_submission)) +
theme_minimal() +
labs(x = "Percentage(%)")
time_elapsed = c(53.2, 440.4, 1654.5)
time_elapsed_submission = c(NA, 600, NA)
volume = c(.1, .5, 1)
time_dat = data.frame(time_elapsed, volume, time_elapsed_submission)
time_dat %>%
ggplot() +
geom_point(aes(volume, time_elapsed)) +
geom_line(aes(volume, time_elapsed)) +
geom_point(aes(volume, time_elapsed_submission)) +
geom_line(aes(volume, time_elapsed_submission)) +
theme_minimal() +
labs(x = "Percentage(%)")
time_elapsed = c(53.2, 440.4, 1654.5)
time_elapsed_submission = c(NA, 600, NA)
volume = c(.1, .5, 1)
time_dat = data.frame(time_elapsed, volume, time_elapsed_submission)
time_dat %>%
ggplot() +
geom_point(aes(volume, time_elapsed)) +
geom_line(aes(volume, time_elapsed)) +
geom_point(aes(volume, time_elapsed_submission), color = "blue") +
geom_line(aes(volume, time_elapsed_submission), color = "blue") +
theme_minimal() +
labs(x = "Percentage(%)")
time_elapsed = c(53.2, 440.4, 1654.5)
time_elapsed_submission = c(NA, 822.4, NA)
volume = c(.1, .5, 1)
time_dat = data.frame(time_elapsed, volume, time_elapsed_submission)
time_dat %>%
ggplot() +
geom_point(aes(volume, time_elapsed)) +
geom_line(aes(volume, time_elapsed)) +
geom_point(aes(volume, time_elapsed_submission), color = "blue") +
geom_line(aes(volume, time_elapsed_submission), color = "blue") +
theme_minimal() +
labs(x = "Percentage(%)")
head(submission)
time_elapsed = c(53.2, 440.4, 1654.5)
time_elapsed_submission = c(NA, 822.4, 3000)
volume = c(.1, .5, 1)
time_dat = data.frame(time_elapsed, volume, time_elapsed_submission)
time_dat %>%
ggplot() +
geom_point(aes(volume, time_elapsed)) +
geom_line(aes(volume, time_elapsed)) +
geom_point(aes(volume, time_elapsed_submission), color = "blue") +
geom_line(aes(volume, time_elapsed_submission), color = "blue") +
theme_minimal() +
labs(x = "Percentage(%)")
3000/60
tic()
set.seed(123)
train = fread("/Users/KokiAndo/Desktop/R/Kaggle/Molecular/data/train.csv")
test = fread("/Users/KokiAndo/Desktop/R/Kaggle/Molecular/data/test.csv")
test$scalar_coupling_constant = NA
merged_dat = rbind(train, test)
index = sample(0:nrow(merged_dat), size = nrow(merged_dat)*.001) # .01% of training ata
merged_dat = arrange(merged_dat[index,], id)
# train + structures
structures = fread("/Users/KokiAndo/Desktop/R/Kaggle/Molecular/data/structures.csv")
structures = structures %>%
mutate(molname_index = paste0(molecule_name, "_ind_", atom_index)) %>%
select(-c(molecule_name, atom_index))
merged_dat = merged_dat %>%
mutate(molname_index = paste0(molecule_name, "_ind_", atom_index_0))
merged_dat = left_join(merged_dat, structures, by.x = "molname_index") %>%
select(-atom, -molname_index)
names(merged_dat)[c(7:9)] = c("x_0", "y_0", "z_0")
merged_dat = merged_dat %>%
mutate(molname_index = paste0(molecule_name, "_ind_", atom_index_1))
merged_dat = left_join(merged_dat, structures, by.x = "molname_index") %>%
select(-molname_index, -atom)
names(merged_dat)[10:12] = c("x_1", "y_1", "z_1")
## -------------------------------- feature engineering --------------------------------
merged_dat = merged_dat %>%
mutate(type1 = ifelse(str_detect(type, "1"), 1, 0),
type2 = ifelse(str_detect(type, "2"), 1, 0),
type3 = ifelse(str_detect(type, "3"), 1, 0),
dist = (x_1-x_0)^2 + (y_1-y_0)^2 + (z_1-z_0)^2)
toc()
# 13.732 sec elapsed
tic()
train = merged_dat[!is.na(merged_dat$scalar_coupling_constant),]
test = merged_dat[is.na(merged_dat$scalar_coupling_constant),] %>%
select(-scalar_coupling_constant)
ranger_model = ranger(
scalar_coupling_constant ~ .,
data = select(train, -id),
num.trees = 500, respect.unordered.factors = "order"
)
ranger_pred = predict(ranger_model, select(train, -scalar_coupling_constant, -id))$predictions
data.frame(actual = train$scalar_coupling_constant, ranger_pred = ranger_pred) %>%
mutate(error = actual-ranger_pred) %>%
summarise(rmse = sqrt(mean(error^2)))
toc()
# 4.311 sec elapsed
merged_dat %>%
head
merged_dat %>%
head()
merged_dat %>%
head()
merged_dat %>%
head() %>%
mutate(scaled_dist = (dist-min(dist))/(max(dist)-min(dist)))
merged_dat %>%
mutate(scaled_dist = (dist-min(dist))/(max(dist)-min(dist))) %>%
select(-dist) %>%
head
merged_dat = merged_dat %>%
mutate(scaled_dist = (dist-min(dist))/(max(dist)-min(dist))) %>%
select(-dist)
tic()
train = merged_dat[!is.na(merged_dat$scalar_coupling_constant),]
test = merged_dat[is.na(merged_dat$scalar_coupling_constant),] %>%
select(-scalar_coupling_constant)
ranger_model = ranger(
scalar_coupling_constant ~ .,
data = select(train, -id),
num.trees = 500, respect.unordered.factors = "order"
)
ranger_pred = predict(ranger_model, select(train, -scalar_coupling_constant, -id))$predictions
data.frame(actual = train$scalar_coupling_constant, ranger_pred = ranger_pred) %>%
mutate(error = actual-ranger_pred) %>%
summarise(rmse = sqrt(mean(error^2)))
toc()
# 4.311 sec elapsed
merged_dat %>%
head()
merged_dat %>%
head()
magnetic = fread("magnetic_shielding_tensors.csv")
magnetic = fread("data/magnetic_shielding_tensors.csv")
magnetic = fread("/Users/KokiAndo/Desktop/R/Kaggle/Molecular/data/magnetic_shielding_tensors.csv")
magnetic %>%
head()
merged_dat %>%
head
magnetic %>%
head() %>%
mutate(molname_ind = paste0(molecule_name, atom_index))
magnetic %>%
head() %>%
mutate(molname_ind = paste0(molecule_name, atom_index)) %>%
select(-c(molecule_name, atom_index))
magnetic = magnetic %>%
mutate(molname_ind = paste0(molecule_name, atom_index)) %>%
select(-c(molecule_name, atom_index))
merged_dat %>%
head
head(magnetic)
merged_dat %>%
head() %>%
mutate(molname_ind = paste0(molecule_name, atom_index_0))
merged_dat = merged_dat %>%
mutate(molname_ind = paste0(molecule_name, atom_index_0))
head(merged_dat)
left_join(merged_dat, magnetic) %>%
head
left_join(merged_dat, magnetic) %>%
tail
merged_dat = merged_dat %>%
mutate(molname_ind = paste0(molecule_name, atom_index_1))
head(merged_dat)
left_join(merged_dat, magnetic) %>%
tail
magnetic = fread("/Users/KokiAndo/Desktop/R/Kaggle/Molecular/data/magnetic_shielding_tensors.csv")
head(magnetic)
head(merged_dat)
magnetic %>%
head
magnetic %>%
head(30)
magnetic %>%
head(30) %>%
group_by(molecule_name) %>%
summarie()
magnetic %>%
head(30) %>%
group_by(molecule_name) %>%
summarise()
magnetic %>%
head(30) %>%
group_by(molecule_name)
magnetic %>%
head(30) %>%
group_by(molecule_name) %>%
mutate(XX = mean(XX))
magnetic %>%
head(30) %>%
group_by(molecule_name) %>%
mutate(XX = mean(XX)) %>%
select(-atom_index)
magnetic %>%
head(30) %>%
group_by(molecule_name) %>%
mutate(XX = mean(XX),
YY = mean(YY),
ZZ = mean(ZZ)) %>%
select(-atom_index)
magnetic %>%
head(30) %>%
group_by(molecule_name) %>%
mutate(XX = mean(XX),
YY = mean(YY),
ZZ = mean(ZZ)) %>%
select(molecule_name, XX,YY,ZZ)
magnetic %>%
head(30) %>%
group_by(molecule_name) %>%
summarise(XX = mean(XX),
YY = mean(YY),
ZZ = mean(ZZ)) %>%
select(molecule_name, XX,YY,ZZ)
STR(magnetic)
str(magnetic)
magnetic %>%
group_by(molecule_name) %>%
summarise(XX = mean(XX),
YY = mean(YY),
ZZ = mean(ZZ)) %>%
select(molecule_name, XX,YY,ZZ)
magnetic = magnetic %>%
group_by(molecule_name) %>%
summarise(XX = mean(XX),
YY = mean(YY),
ZZ = mean(ZZ)) %>%
select(molecule_name, XX,YY,ZZ)
head(merged_dat)
tic()
set.seed(123)
train = fread("/Users/KokiAndo/Desktop/R/Kaggle/Molecular/data/train.csv")
test = fread("/Users/KokiAndo/Desktop/R/Kaggle/Molecular/data/test.csv")
test$scalar_coupling_constant = NA
merged_dat = rbind(train, test)
index = sample(0:nrow(merged_dat), size = nrow(merged_dat)*.001) # .01% of training ata
merged_dat = arrange(merged_dat[index,], id)
# train + structures
structures = fread("/Users/KokiAndo/Desktop/R/Kaggle/Molecular/data/structures.csv")
structures = structures %>%
mutate(molname_index = paste0(molecule_name, "_ind_", atom_index)) %>%
select(-c(molecule_name, atom_index))
merged_dat = merged_dat %>%
mutate(molname_index = paste0(molecule_name, "_ind_", atom_index_0))
merged_dat = left_join(merged_dat, structures, by.x = "molname_index") %>%
select(-atom, -molname_index)
names(merged_dat)[c(7:9)] = c("x_0", "y_0", "z_0")
merged_dat = merged_dat %>%
mutate(molname_index = paste0(molecule_name, "_ind_", atom_index_1))
merged_dat = left_join(merged_dat, structures, by.x = "molname_index") %>%
select(-molname_index, -atom)
names(merged_dat)[10:12] = c("x_1", "y_1", "z_1")
## -------------------------------- feature engineering --------------------------------
merged_dat = merged_dat %>%
mutate(type1 = ifelse(str_detect(type, "1"), 1, 0),
type2 = ifelse(str_detect(type, "2"), 1, 0),
type3 = ifelse(str_detect(type, "3"), 1, 0),
dist = (x_1-x_0)^2 + (y_1-y_0)^2 + (z_1-z_0)^2)
merged_dat = merged_dat %>%
mutate(scaled_dist = (dist-min(dist))/(max(dist)-min(dist))) %>%
select(-dist)
toc()
# 13.732 sec elapsed
magnetic = fread("/Users/KokiAndo/Desktop/R/Kaggle/Molecular/data/magnetic_shielding_tensors.csv")
magnetic = magnetic %>%
group_by(molecule_name) %>%
summarise(XX = mean(XX),
YY = mean(YY),
ZZ = mean(ZZ)) %>%
select(molecule_name, XX,YY,ZZ)
head(merged_dat)
head(merged_dat)
left_join(merged_dat, magnetic) %>%
tail
potential = fread("/Users/KokiAndo/Desktop/R/Kaggle/Molecular/data/potential_energy.csv")
head(potential)
str(potential)
head(potential)
left_join(merged_dat, potential) %>%
tail
dipole = fread("/Users/KokiAndo/Desktop/R/Kaggle/Molecular/data/dipole_moments.csv")
head(dipole)
left_join(merged_dat, dipole) %>%
tail
mulliken = fread("/Users/KokiAndo/Desktop/R/Kaggle/Molecular/data/mulliken.csv")
mulliken = fread("/Users/KokiAndo/Desktop/R/Kaggle/Molecular/data/mulliken_charges")
mulliken = fread("/Users/KokiAndo/Desktop/R/Kaggle/Molecular/data/mulliken_charges.csv")
head(mulliken)
left_join(merged_dat, atom_index) %>%
tail
left_join(merged_dat, mulliken) %>%
tail
getwd()
head(merged_dat)
time_elapsed = c(53.2, 440.4, 1654.5)
time_elapsed_submission = c(NA, 822.4, 2129.2)
volume = c(.1, .5, 1)
time_dat = data.frame(time_elapsed, volume, time_elapsed_submission)
time_dat %>%
ggplot() +
geom_point(aes(volume, time_elapsed)) +
geom_line(aes(volume, time_elapsed)) +
geom_point(aes(volume, time_elapsed_submission), color = "blue") +
geom_line(aes(volume, time_elapsed_submission), color = "blue") +
theme_minimal() +
labs(x = "Percentage(%)")
2129.2/60
table(merged_dat$type)
table(merged_dat$type) %>% data.table()
table(merged_dat$type) %>% data.frame()
table(merged_dat$type) %>% data.table()
time_elapsed = c(53.2, 440.4, 1654.5)
time_elapsed_submission = c(NA, 822.4, 2129.2)
volume = c(.1, .5, 1)
time_dat = data.frame(time_elapsed, volume, time_elapsed_submission)
time_dat %>%
ggplot() +
geom_point(aes(volume, time_elapsed)) +
geom_line(aes(volume, time_elapsed)) +
geom_point(aes(volume, time_elapsed_submission), color = "blue") +
geom_line(aes(volume, time_elapsed_submission), color = "blue") +
theme_minimal() +
labs(x = "Percentage(%)")
table(merged_dat$type) %>%
data.table()
(2+4-4-6)/4
table(merged_dat$type) %>%
data.table() %>%
mutate(Hz = case_when( #http://sopnmr.ucsd.edu/coupling.htm
V1 == "1JHC" ~ 140,
V1 == "1JHN" ~ 100,
V1 == "2JHC" ~ (2+4-4-6)/4,
V1 == "2JHH" ~ (-13+1)/2,
V1 == "2JHN" ~ 1,
V1 == "3JHC" ~ 1,
V1 == "3JHH" ~ 8,
V1 == "3JHN" ~
))
table(merged_dat$type) %>%
data.table() %>%
mutate(Hz = case_when( #http://sopnmr.ucsd.edu/coupling.htm
V1 == "1JHC" ~ 140,
V1 == "1JHN" ~ 100,
V1 == "2JHC" ~ (2+4-4-6)/4,
V1 == "2JHH" ~ (-13+1)/2,
V1 == "2JHN" ~ 1,
V1 == "3JHC" ~ 1,
V1 == "3JHH" ~ 8,
V1 == "3JHN" ~ 9
))
getwd()
library(lubridate)
library(tidyverse)
library(tictoc)
library(lubridate)
library(tidyverse)
library(tictoc)
train = read.csv("train.csv")
test = read.csv("test.csv")
test$y = NA
merged_dat = rbind(train, test)
merged_dat = merged_dat %>%
mutate(weekday = case_when(
week == "月" ~ 1,
week == "火" ~ 2,
week == "水" ~ 3,
week == "木" ~ 4,
week == "金" ~ 5
)) %>% select(-week)
merged_dat$datetime = as.Date(merged_dat$datetime)
merged_dat = merged_dat %>%
mutate(
year = year(datetime),
month = month(datetime),
day = day(datetime)
)
merged_dat = merged_dat %>%
mutate(FunMenu = ifelse(
remarks == "お楽しみメニュー", 1, 0
))
merged_dat[is.na(merged_dat$payday), ]$payday = 0
merged_dat[which(merged_dat$precipitation == "--"), ]$precipitation = 0
merged_dat$precipitation = as.numeric(as.character(merged_dat$precipitation))
merged_dat[is.na(merged_dat$kcal), ]$kcal = mean(merged_dat$kcal, na.rm=T)
merged_dat = merged_dat %>%
mutate(
chiken = ifelse(str_detect(name, "鶏"), 1, 0),
katsu = ifelse(str_detect(name, "カツ"), 1, 0),
curry = ifelse(str_detect(name, "カレー"), 1, 0),
handmade = ifelse(str_detect(name, "手作り"), 1, 0),
fish = ifelse(str_detect(name, "魚"), 1, 0),
meat = ifelse(str_detect(name, "肉"), 1, 0)
)
merged_dat$remarks = NULL
merged_dat = merged_dat %>%
mutate(rainy = ifelse(weather %in% c("雨", "雪", "雷電"), 1, 0))
merged_dat$weather = NULL
merged_dat$event = NULL
# dealing with outliers
merged_dat[which(merged_dat$precipitation == max(merged_dat$precipitation)), ]$precipitation = 0
merged_dat[which(merged_dat$precipitation == max(merged_dat$precipitation)), ]$precipitation = 0
# temperature
merged_dat[which(merged_dat$y < 78 & merged_dat$temperature == 6.7), ]$temperature = 25.5
merged_dat[which(merged_dat$y < 78 & merged_dat$temperature == 7.0), ]$temperature = 25.5
merged_dat = merged_dat %>%
group_by(name) %>%
mutate(name_count = n()) %>%
ungroup() %>%
mutate(name_cat = case_when(
name_count == 1 ~ "other_dish",
TRUE ~ as.character(merged_dat$name)
))
merged_dat$name_cat = NULL
merged_dat %>%
head
