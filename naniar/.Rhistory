group_by()
rating %>%
mutate(Rate_year = substr(as.character(Date.Rated), 1, 4)) %>%
# head()
filter(Rate_year == 2019) %>%
arrange(desc(Your.Rating)) %>%
select(-c(URL, Year, Genres, IMDb.Rating, Runtime..mins., Num.Votes)) %>%
group_by()
rating %>%
mutate(Rate_year = substr(as.character(Date.Rated), 1, 4)) %>%
# head()
filter(Rate_year == 2019) %>%
arrange(desc(Your.Rating)) %>%
select(-c(URL, Year, Genres, Const, IMDb.Rating, Runtime..mins., Num.Votes)) %>%
group_by()
rating %>%
mutate(Rate_year = substr(as.character(Date.Rated), 1, 4)) %>%
# head()
filter(Rate_year == 2019) %>%
arrange(desc(Your.Rating)) %>%
filter(Release_Year > 2017) %>%
select(-c(URL, Year, Genres, Const, IMDb.Rating, Runtime..mins., Num.Votes)) %>%
group_by()
rating %>%
mutate(Rate_year = substr(as.character(Date.Rated), 1, 4)) %>%
# head()
filter(Rate_year == 2019) %>%
arrange(desc(Your.Rating)) %>%
filter(Release_Year > 2017) %>%
filter(Your.Rating > 7) %>%
select(-c(URL, Year, Genres, Const, IMDb.Rating, Runtime..mins., Num.Votes)) %>%
group_by()
release.year.viz <- rating %>%
ggplot(aes(Release_Year)) +
geom_histogram(binwidth = 1)
ggplotly(release.year.viz)
release.year.viz <- rating %>%
ggplot(aes(Release_Year)) +
geom_histogram()
ggplotly(release.year.viz)
rating %>%
ggplot(aes(Release_Year)) +
geom_histogram()
library(tidyverse)
bank_dat = read.csv("分析データ.csv")
bank_dat$X = NULL
bank_dat = bank_dat %>%
filter(FY >= 2010)
bank_dat %>%
summary()
bank_dat = bank_dat %>%
arrange(Prefecture, FY) %>%
select(Prefecture, FY, 預金:資産合計, 一般貸倒引当金:県内名目総生産) %>%
mutate(中小企業等貸出金額 = 貸出金 * (中小企業等貸し出し金比率/100)) %>%
group_by(Prefecture) %>%
mutate(中小企業等貸出金額_前年比 = lag(中小企業等貸出金額)/中小企業等貸出金額,
県内名目総生産_前年比 = lag(県内名目総生産)/県内名目総生産,
一人当たり県民所得_前年比 = lag(一人当たり県民所得)/一人当たり県民所得) %>%
ungroup()
write.csv(bank_dat, "分析データ_前年比.csv", row.names = FALSE)
unemployed = read.csv("都道府県別完全失業率推移.csv")
head(unemployed)
unemployed$FY = unemployed$FY %>%
as.character() %>%
str_remove_all("\\(|\\)")
unemployed = unemployed %>%
gather(key = "Prefecture", value = "完全失業率", -FY) %>%
mutate(完全失業率 = as.numeric(完全失業率))
unemployed$Prefecture = as.factor(unemployed$Prefecture)
unemployed$FY = as.integer(unemployed$FY)
str(bank_dat)
str(unemployed)
bank_dat = left_join(bank_dat, unemployed)
bank_dat = left_join(bank_dat, unemployed)
library(tidyverse)
bank_dat = read.csv("分析データ.csv")
bank_dat$X = NULL
bank_dat = bank_dat %>%
filter(FY >= 2010)
bank_dat %>%
filter(中小企業等貸し出し金比率 > 70) %>%
summary
head()
bank_dat = bank_dat %>%
arrange(Prefecture, FY) %>%
select(Prefecture, FY, 預金:資産合計, 一般貸倒引当金:県内名目総生産) %>%
mutate(中小企業等貸出金額 = 貸出金 * (中小企業等貸し出し金比率/100)) %>%
group_by(Prefecture) %>%
mutate(中小企業等貸出金額_前年比 = lag(中小企業等貸出金額)/中小企業等貸出金額,
県内名目総生産_前年比 = lag(県内名目総生産)/県内名目総生産,
一人当たり県民所得_前年比 = lag(一人当たり県民所得)/一人当たり県民所得) %>%
ungroup()
write.csv(bank_dat, "分析データ_前年比.csv", row.names = FALSE)
unemployed = read.csv("都道府県別完全失業率推移.csv")
head(unemployed)
unemployed$FY = unemployed$FY %>%
as.character() %>%
str_remove_all("\\(|\\)")
unemployed = unemployed %>%
gather(key = "Prefecture", value = "完全失業率", -FY) %>%
mutate(完全失業率 = as.numeric(完全失業率))
unemployed$Prefecture = as.factor(unemployed$Prefecture)
unemployed$FY = as.integer(unemployed$FY)
#str(bank_dat)
#str(unemployed)
bank_dat = left_join(bank_dat, unemployed)
bank_dat %>%
select(-contains("前年比")) %>%
select(-c(有価証券:消費者ローンうち住宅ローン)) %>%
head()
# gather(key, value, -Prefecture, -FY, -県内名目総生産, -一人当たり県民所得) %>%
# ggplot(aes(一人当たり県民所得, value)) +
# geom_point() +
# facet_wrap(~key, scales ="free") +
# theme_gray (base_family = "HiraKakuPro-W3")
selected_dat = bank_dat %>%
filter(Prefecture %!in% c("東京都", "愛知県", "大阪府", "福岡県")) %>%
select(-contains("前年比"), -c(有価証券:消費者ローンうち住宅ローン), -c(Prefecture, FY), -c(預金, 貸出金), -中小企業等貸出金額)
selected_dat %>%
ggpairs() +
theme_gray(base_family = "HiraKakuPro-W3")
lm_sme_ratio = lm(中小企業等貸し出し金比率 ~ ., selected_dat)
summary(lm_sme_ratio)
# lm_sme_price = lm(中小企業等貸出金額 ~ ., selected_dat)
lm_sme_ratio
head(bank_dat) %>% View
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse)
dir()
gdp = read.csv("県内名目総生産GDP.csv")
income = read.csv("一人当たりの県民所得.csv")
unemployment = read.csv("都道府県別完全失業率推移.csv")
dat = read.csv("分析データ")
dat = read.csv("分析データ.csv")
head(dat)
dat %>%
filter(FY >= 2010)
dat %>%
filter(FY >= 2010) %>%
head()
dat = filter(dat, FY >= 2010)
dat %>%
head()
dat$FY %>% summary()
dat$FY
population = read_xlsx("都道府県別人口推移.xlsx")
population = read.xlsx("都道府県別人口推移.xlsx")
library(readxl)
population = read_xlsx("都道府県別人口推移.xlsx")
pacman::p_load(tidyverse, readxl)
population = read_xlsx("都道府県別人口推移.xlsx")
population
population %>%
head() %>%
gather(key, value, -都道府県) %>%
population %>%
head() %>%
gather(key, value, -都道府県)
population %>%
head() %>%
gather(key, value, -都道府県)
head(dat)
dat$X = NULL
head(dat)
str(dat)
population = population %>%
gather(key, value, -都道府県)
names(population)
names(population) = c("Prefecture", "FY", "人口")
head(population)
population$FY = as.integer(population$FY)
population$Prefecture = as.factor(population$Prefecture)
head(population)
left_join(dat, population)
left_join(dat, population) %>%
HEAD()
left_join(dat, population) %>%
head()
summary(population)
summary(dat)
str(population)
str(dat)
population$Prefecture
population = read_xlsx("都道府県別人口推移.xlsx")
population = population %>%
gather(key, value, -都道府県)
names(population) = c("Prefecture", "FY", "人口")
population$FY = as.integer(population$FY)
population$Prefecture %>%
head()
population$Prefecture %>%
str_remove(" ") %>%
head()
population$Prefecture %>%
str_remove_all(" ") %>%
head()
population$Prefecture = population$Prefecture %>%
str_remove_all(" ") %>%
as.factor()
left_join(dat, population) %>%
head()
dat = left_join(dat, population)
dat %>%
head()
dat %>%
ggplot(aes(人口, 預金)) +
geom_point()
dat %>%
ggplot(aes(人口, 預金)) +
geom_point() +
theme_gray (base_family = "HiraKakuPro-W3")
dat %>%
ggplot(aes(人口, 預金)) +
geom_point() +
geom_smooth(method = "lm") +
theme_gray (base_family = "HiraKakuPro-W3")
dat %>%
head()
dat %>%
group_by() %>%
head()
dat %>%
group_by()
dat %>%
select(Prefecture, 人口)
dat %>%
select(Prefecture, 人口) %>%
head()
dat %>%
select(Prefecture, 人口) %>%
arrange(人口) %>%
head()
dat %>%
select(Prefecture, 人口) %>%
arrange(desc(人口)) %>%
head()
dat %>%
select(Prefecture, 人口) %>%
arrange(desc(人口))
dat %>%
select(Prefecture, 人口) %>%
group_by(Prefecture) %>%
arrange(desc(人口))
dat %>%
select(Prefecture, 人口) %>%
group_by(Prefecture) %>%
mutate(平均人口 = mean(人口)) %>%
arrange(desc(人口))
dat %>%
select(Prefecture, 人口) %>%
group_by(Prefecture) %>%
summarise(平均人口 = mean(人口)) %>%
arrange(desc(人口))
dat %>%
select(Prefecture, 人口) %>%
group_by(Prefecture) %>%
summarise(平均人口 = mean(人口)) %>%
arrange(desc(平均人口))
dat %>%
select(Prefecture, 人口) %>%
group_by(Prefecture) %>%
summarise(平均人口 = mean(人口)) %>%
arrange(desc(平均人口))
dat %>%
select(Prefecture, 人口) %>%
group_by(Prefecture) %>%
summarise(平均人口 = mean(人口)) %>%
arrange(平均人口)
dat %>%
select(Prefecture, 人口) %>%
group_by(Prefecture) %>%
summarise(平均人口 = mean(人口)) %>%
arrange(平均人口) %>%
pull(Prefecture)
least_pop_pref = dat %>%
select(Prefecture, 人口) %>%
group_by(Prefecture) %>%
summarise(平均人口 = mean(人口)) %>%
arrange(平均人口) %>%
pull(Prefecture)
least_pop_pref
dat %>%
filter(Prefecture %in% least_pop_pref) %>%
head()
least_pop_pref = dat %>%
select(Prefecture, 人口) %>%
group_by(Prefecture) %>%
summarise(平均人口 = mean(人口)) %>%
arrange(平均人口) %>%
head(20) %>%
pull(Prefecture)
least_pop_pref
dat %>%
filter(Prefecture %in% least_pop_pref) %>%
head()
dat %>%
filter(Prefecture %in% least_pop_pref) %>%
# head()
ggplot(aes(人口, 預金)) +
geom_point() +
geom_smooth(method = "lm") +
theme_gray (base_family = "HiraKakuPro-W3")
least_pop_dat = dat %>%
filter(Prefecture %in% least_pop_pref)
least_pop_dat %>%
ggplot(aes(人口, 預金)) +
geom_point() +
geom_smooth(method = "lm") +
theme_gray (base_family = "HiraKakuPro-W3")
least_pop_dat %>%
head()
least_pop_dat %>%
group_by()
least_pop_dat %>%
group_by()
least_pop_dat %>%
group_by()
least_pop_dat %>%
select(-c(有価証券:資産合計)) %>%
group_by()
least_pop_dat %>%
select(-c(有価証券:資産合計), -contains("貸倒")) %>%
group_by()
least_pop_dat %>%
select(-c(有価証券:資産合計), -contains("貸倒")) %>%
ggplot(aes(FY, 人口, group = Prefecture)) +
geom_line()
least_pop_dat %>%
select(-c(有価証券:資産合計), -contains("貸倒")) %>%
ggplot(aes(FY, 人口, group = Prefecture)) +
geom_line()
least_pop_dat %>%
select(-c(有価証券:資産合計), -contains("貸倒")) %>%
ggplot(aes(FY, 人口, group = Prefecture)) +
geom_line() +
theme_gray (base_family = "HiraKakuPro-W3")
least_pop_dat %>%
select(-c(有価証券:資産合計), -contains("貸倒")) %>%
head()
least_pop_dat %>%
select(-c(有価証券:資産合計), -contains("貸倒")) %>%
head() %>%
gather(key, value, -Prefecture, -FY)
least_pop_dat %>%
select(-c(有価証券:資産合計), -contains("貸倒"), -Bank_list) %>%
head() %>%
gather(key, value, -Prefecture, -FY)
least_pop_dat %>%
select(-c(有価証券:資産合計), -contains("貸倒"), -Bank_list) %>%
head() %>%
gather(key, value, -Prefecture, -FY) %>%
ggplot(aes(FY, value, group = Prefecture, colour = Prefecture)) +
geom_line() +
facet_wrap(~key, scales = "free")
least_pop_dat %>%
select(-c(有価証券:資産合計), -contains("貸倒"), -Bank_list) %>%
# head() %>%
gather(key, value, -Prefecture, -FY) %>%
ggplot(aes(FY, value, group = Prefecture, colour = Prefecture)) +
geom_line() +
facet_wrap(~key, scales = "free") +
theme_gray (base_family = "HiraKakuPro-W3")
least_pop_dat %>%
select(-c(有価証券:資産合計), -contains("貸倒"), -Bank_list) %>%
# head() %>%
gather(key, value, -Prefecture, -FY) %>%
ggplot(aes(FY, value, group = Prefecture, colour = Prefecture)) +
geom_line() +
facet_wrap(~key, scales = "free") +
theme_gray (base_family = "HiraKakuPro-W3")
dat %>%
select(-c(有価証券:資産合計), -contains("貸倒"), -Bank_list) %>%
# head() %>%
gather(key, value, -Prefecture, -FY) %>%
ggplot(aes(FY, value, group = Prefecture, colour = Prefecture)) +
geom_line() +
facet_wrap(~key, scales = "free") +
theme_gray (base_family = "HiraKakuPro-W3")
dat %>%
select(-c(有価証券:資産合計), -contains("貸倒"), -Bank_list) %>%
head()
dat %>%
ggplot(aes(人口, 県内名目総生産)) +
geom_point()
dat %>%
ggplot(aes(一人当たり県民所得, 県内名目総生産)) +
geom_point()
dat %>%
ggplot(aes(人口, 一人当たり県民所得)) +
geom_point()
setwd("/Users/KokiAndo/Desktop/R/hatenablog/reactable")
setwd("/Users/KokiAndo/Desktop/R/hatenablog/reactable")
install.packages("reactable")
pacman::p_load(reactable, tidyverse)
?pacman
library(pacman)
?p_load
mtcars %>% head
pacman::p_load(tidyverse, DT, reactable)
mtcars %>% head
mtcars %>%
head()
datatable(mtcars)
datatable(mtcars,
options = list(lengthMenu = c(5, 10, 15, 20, 50))
)
datatable(mtcars,
options = list(
lengthMenu = c(5, 10, 15, 20, 50),
rownames = FALSE
)
)
datatable(mtcars,
rownames = FALSE,
options = list(
lengthMenu = c(5, 10, 15, 20, 50)
)
)
datatable(mtcars,
rownames = TRUE,
options = list(
lengthMenu = c(5, 10, 15, 20, 50)
)
)
?mtcars
datatable(mtcars,
rownames = TRUE, #
options = list(
lengthMenu = c(5, 10, 15, 20, 50) # 表示するデータ観測数の調整
),
caption = 'Motor Trend Car Road Tests'
)
datatable(mtcars,
rownames = TRUE, #
options = list(
lengthMenu = c(5, 10, 15, 20, 50) # 表示するデータ観測数の調整
),
caption = 'Motor Trend Car Road Tests',
filter = "top"
)
reactable(mtcars)
reactable(mtcars,
pageSizeOptions = c(5, 10, 15, 20, 50)
)
reactable(mtcars,
showPageSizeOptions = TRUE,
pageSizeOptions = c(5, 10, 15, 20, 50)
)
reactable(mtcars,
showPageSizeOptions = TRUE,
pageSizeOptions = c(5, 10, 15, 20, 50),
paginationType = "jump"
)
reactable(mtcars,
showPageSizeOptions = TRUE,
pageSizeOptions = c(5, 10, 15, 20, 50),
paginationType = "jump",
highlight = TRUE
)
reactable(mtcars,
showPageSizeOptions = TRUE,
pageSizeOptions = c(5, 10, 15, 20, 50),
paginationType = "jump",
# スタイルの変更
highlight = TRUE,
bordered = TRUE
)
getwd()
setwd("/Users/KokiAndo/Desktop/R/hatenablog/impute")
setwd("/Users/KokiAndo/Desktop/R/hatenablog/naniar")
library(naniar)
data(riskfactors)
head(riskfactors)
as.data.table(riskfactors) %>% head
data.table(riskfactors) %>% head
str(riskfactors)
?naniar
data(pedestrian)
str(pedestrian)
data(oceanbuoys)
str(oceanbuoys)
oceanbuoys %>%
HEAD()
oceanbuoys %>%
head()
data(pedestrian)
pedestrian %>%
head()
data("riskfactors")
pedestririskfactorsan %>%
head()
riskfactors %>%
head()
riskfactors %>%
data.table() %>%
head()
riskfactors %>%
as.data.frame() %>%
head()
?data
data
data()
?replace_with_na
dat_ms <- tibble::tribble(~x,  ~y,    ~z,
1,   "A",   -100,
3,   "N/A", -99,
NA,  NA,    -98,
-99, "E",   -101,
-98, "F",   -1)
dat_ms
replace_with_na(dat_ms,
replace = list(x = -99))
